import  pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import confusion_matrix
from tensorflow.keras.callbacks import EarlyStopping
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.models import load_model
from tensorflow.python.keras.saving.saved_model.load import metrics
from tensorflow.python.keras.utils.version_utils import callbacks
creditcard=r"C:\creditcard.csv"
df=pd.read_csv("creditcard.csv")
df.drop(['Time'],axis=1,inplace=True)

scaler=StandardScaler()
df['Amount']=scaler.fit_transform(df[['Amount']])

x=df.drop('Class',axis=1)
y=df['Class']
x_train,x_test,y_train,y_test=train_test_split(x,y,stratify=y,random_state=42,test_size=0.2)

#from imblearn.over_sampling import SMOTE
#sm = SMOTE(random_state=42)
#X_res, y_res = sm.fit_resample(X_train, y_train)

model=Sequential([
    Dense(64,input_dim=x.shape[1],activation='tanh'),
    Dense(32,activation='tanh'),
    Dense(1,activation='sigmoid')
])

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

es=EarlyStopping(patience=3,
                restore_best_weights=True)

model.fit(x_train,y_train,epochs=18,batch_size=2048,validation_data=(x_test,y_test),callbacks=[es])
y_probs = model.predict(x_test)
#from sklearn.metrics import precision_recall_curve, f1_score

#prec, rec, thresh = precision_recall_curve(y_test, y_probs)

#f1_scores = [f1_score(y_test, (y_probs > t).astype(int)) for t in thresh]
#best_thresh = thresh[np.argmax(f1_scores)]
#print("Best threshold:", best_thresh)

y_pred = model.predict(x_test)
y_pred_class = (y_pred > 0.353).astype("int32")

from sklearn.metrics import  classification_report

print(confusion_matrix(y_test, y_pred_class))
print(classification_report(y_test, y_pred_class, digits=4))


model.save('model/CreditCardFraudDetection.h5')
# all 3 for threshold 0.353
#Precision-83.5
#Recall-82.6
#f1-83.08

# will changing the activation fn help????it did,lol.
#the part below this is for Visualisation purposes
print(1)

#Precision vs recall curve
import matplotlib.pyplot as plt
from sklearn.metrics import precision_recall_curve
prec, rec, thresh = precision_recall_curve(y_test, y_probs)

plt.figure()
plt.plot(rec, prec, label="Precision-Recall Curve", linewidth=2)
plt.xlabel("Recall")
plt.ylabel("Precision")
plt.title("Precision vs Recall")
plt.grid()
plt.legend()
plt.show()

print(2)
#F1 vs THreshold
from sklearn.metrics import f1_score
f1_scores = [f1_score(y_test, (y_probs > t).astype(int)) for t in thresh]
print(3)
plt.figure()
plt.plot(thresh, f1_scores, color='purple', linewidth=2)
plt.title("F1 Score vs Threshold")
plt.xlabel("Threshold")
plt.ylabel("F1 Score")
plt.grid(True)
plt.show()

print(4)

model.save('model/CreditCardFraudDetection.h5')

#How do i get the user to control the value of threshold & suggest him the best threshold for the uploaded data
#ask user for csv
#frontend deploy kaise kru